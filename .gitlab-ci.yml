stages:
  - docker-build
  - service-test

job-docker:
  stage: docker-build
  image: docker:23.0 
  services:
    - docker:dind
  variables:
    DOCKER_BUILDKIT: 1
    JOB_IMAGE_TAG: $CI_REGISTRY_IMAGE/presidio-analyzer:$CI_COMMIT_REF_SLUG.$CI_COMMIT_SHA
    LATEST_TAG: $CI_REGISTRY_IMAGE/presidio-analyzer:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --network host
      --pull
      --cache-from $CI_REGISTRY_IMAGE/presidio-analyzer:latest
      --cache-from $CI_REGISTRY_IMAGE/presidio-analyzer:$CI_COMMIT_REF_SLUG.$CI_COMMIT_SHA
      --build-arg BUILDKIT_INLINE_CACHE=1
      --build-arg FURY_AUTH=$FURY_AUTH
      --build-arg VERSION_STRING="$CI_REGISTRY_IMAGE/presidio-analyzer:$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA:$CI_COMMIT_TIMESTAMP"
      -f Dockerfile
      -t "$JOB_IMAGE_TAG" .
    - docker tag "$JOB_IMAGE_TAG" "$LATEST_TAG"  # Tagging the image as latest
    - docker push "$JOB_IMAGE_TAG"
    - docker push "$LATEST_TAG"
  when: manual

job-service:
  stage: service-test
  image: docker:23.0 
  services:
    - docker:dind
  variables:
    JOB_IMAGE_TAG: $CI_REGISTRY_IMAGE/presidio-analyzer:latest
  before_script:
    - apk add --no-cache python3 py3-pip curl
    - pip3 install pytest
    - pip3 install requests
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$JOB_IMAGE_TAG"
    - docker run -d --name presidio -p 8080:8080 -e PORT=8080 "$JOB_IMAGE_TAG"
    - sleep 60
    - docker ps
    - docker logs presidio
    - curl http://docker:8080/health
    - export SERVICE_HOSTNAME="docker" && pytest tests/test_service.py -s
  when: manual


